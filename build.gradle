plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

/**
 build.gradle 의존관계 구성 (dependencies)
 [Maven Repository](https://mvnrepository.com/) 에서 추가할 라이브러리 검색 후 의존성 추가
 1) implementation : 프로젝트 컴파일 과정에서 필요한 라이브러리
 2) compileOnly: compile 시에만 빌드, 빌드 결과물에는 포함하지 않음 / runtime 시 필요없는 라이브러리인 경우
 3) runtimeOnly: runtime 시에만 필요한 라이브러리인 경우
 4) annotationProcessor: annotation processor 명시 (ex:lombok)
 5) testImplementation : test 시에 필요한 dependency 관리
 */
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j:8.4.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
